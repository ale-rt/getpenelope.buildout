[app:dashboard]
use = egg:por.dashboard
pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = false
default_locale_name = en
sa.dashboard.url =  ${parts.dashboard['db_string']}
mail.host = ${parts.settings['mail_host']}
mail.port = ${parts.settings['mail_port']}
mail.username = ${parts.settings['mail_username']}
mail.password = ${parts.settings['mail_password']}
mail.default_sender = ${parts.settings['mail_default_sender']}
project_name = ${parts.settings['projectname']}
karma.url = ${parts.settings['karmaurl']}
por.solr = ${parts.settings['solr']}
por.svn.authz = ${parts.buildout['directory']}/var/authz.ini
por.svn.authz_init = ${parts.buildout['directory']}/etc/svnauth_init.ini
por.svn.envs = ${parts.buildout['directory']}/var/svnenvs
por.svn.url = ${parts.settings['svnurl']}
por.trac.templates = ${parts.buildout['directory']}/trac-templates
por.trac.masterconfig = ${parts.buildout['directory']}/etc/trac.ini
por.trac.envs = ${parts.buildout['directory']}/var/tracenvs
por.dashboard.vacancy_email = richiestaferie@${parts.settings['google']}
por.dashboard.google_domain = ${parts.settings['google']}
por.dashboard.iteration_folder = ${parts.settings['iteration_folder']}
por.dashboard.iteration_template = ${parts.settings['iteration_template']}
pyramid.includes = 
    pyramid_exclog
    pyramid_fanstatic
    ${parts.settings['includes']}

session.type = file
session.data_dir = ${parts.buildout['directory']}/var/data/sessions/data
session.lock_dir = ${parts.buildout['directory']}/var/data/sessions/lock
session.key = dashboard
session.secret = whatever
session.cookie_on_exception = true
cache.regions = default_term, calculate_matrix, template_caching
cache.lock_dir = ${parts.buildout['directory']}/var/data/cache/lock
cache.template_caching.type = memory
cache.default_term.expire = 300
cache.calculate_matrix.type = ext:memcached
cache.calculate_matrix.url = 127.0.0.1:11211
cache.calculate_matrix.expire = 86400

available_themes = overcast

velruse.store = velruse.store.sqlstore.SQLStore
velruse.store.url = ${parts.dashboard['db_string']}
velruse.providers = por.dashboard.security.openid2
velruse.openid.store = openid.store.memstore.MemoryStore
velruse.openid.realm = ${parts.settings['url']}

fanstatic.bottom = true
fanstatic.debug = false
fanstatic.versioning = true
fanstatic.minified = true

[filter:weberror]
use = egg:WebError#main
debug = true

[filter:gzip]
use = egg:Paste#gzip
compress_level = 6

[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
scheme = ${parts.settings['prefix']}

[pipeline:main]
pipeline =
    raven
    proxy-prefix
    weberror
    tm
    who
    beaker
    gzip
    applications

[composite:applications]
use = egg:Paste#urlmap
/ = dashboard
/trac = trac
 
[pipeline:trac]
pipeline = fanstatic tracs

[filter:fanstatic]
use = egg:fanstatic#fanstatic
versioning = true
bottom = true
minified = true

[filter:raven]
use = egg:raven#raven
dsn = ${parts.settings['sentry_dsn']}

[app:tracs]
use = egg:WSGITrac#tracs
path = ${parts.buildout['directory']}/var/tracenvs

[filter:tm]
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[filter:beaker]
use = egg:Beaker#beaker_session

[filter:who]
use = egg:repoze.who#config
config_file = ${parts.buildout['directory']}/etc/who.ini

[server:main]
use = egg:Paste#http
host = ${parts.settings['host']}
port = ${parts.settings['port']}


# Begin logging configuration

[loggers]
keys = root, penelope, exc_logger

[handlers]
keys = console, penelope, exc_handler

[formatters]
keys = generic, exc_formatter

[logger_root]
level = WARN
handlers = console

[logger_penelope]
level = DEBUG
handlers = penelope
qualname = penelope

[logger_exc_logger]
level = ERROR
handlers = exc_handler
qualname = exc_logger

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = WARN
formatter = generic

[handler_penelope]
class = FileHandler
args = ('${parts.buildout['directory']}/var/log/penelope_debug.log','a')
level = DEBUG
formatter = generic

[handler_exc_handler]
class = FileHandler
args = ('${parts.buildout['directory']}/var/log/penelope_exception.log',)
level = ERROR
formatter = exc_formatter

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[formatter_exc_formatter]
format = %(asctime)s %(message)s

# End logging configuration
