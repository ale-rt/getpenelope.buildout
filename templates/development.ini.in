[app:dashboard]
use = egg:por.dashboard
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
default_locale_name = en
sa.dashboard.url =  ${parts.dashboard['db_string']}
mail.host = localhost
mail.port = 8025
mail.from_address = admin@${parts.settings['google']}

project_name = ${parts.settings['projectname']}
por.svn.url = ${parts.settings['svnurl']}
por.trac.envs = ${parts.buildout['directory']}/var/tracenvs
por.svn.envs = ${parts.buildout['directory']}/var/svnenvs
por.svn.authz = ${parts.buildout['directory']}/var/authz.ini
por.svn.authz_init = ${parts.buildout['directory']}/etc/svnauth_init.ini
por.trac.templates = ${parts.buildout['directory']}/trac-templates
por.trac.masterconfig = ${parts.buildout['directory']}/etc/trac.ini
por.dashboard.vacancy_email = richiestaferie@${parts.settings['google']}
por.dashboard.google_domain = ${parts.settings['google']}
pyramid.includes = pyramid_debugtoolbar pyramid_fanstatic

session.type = file
session.data_dir = ${parts.buildout['directory']}/var/data/sessions/data
session.lock_dir = ${parts.buildout['directory']}/var/data/sessions/lock
session.key = dashboard
session.secret = whatever
session.cookie_on_exception = true
cache.regions = default_term, calculate_matrix
cache.type = memory
cache.calculate_matrix.expire = 3600
cache.default_term.expire = 300
available_themes = overcast

velruse.store = velruse.store.sqlstore.SQLStore
velruse.store.url = ${parts.dashboard['db_string']}
velruse.providers = por.dashboard.security.openid2
velruse.openid.store = openid.store.memstore.MemoryStore
velruse.openid.realm = ${parts.settings['url']}

fanstatic.bottom = true
fanstatic.debug = true

[pipeline:main]
pipeline =
    egg:WebError#evalerror
    tm
    who
    beaker
    applications

[composite:applications]
use = egg:Paste#urlmap
/ = dashboard
/trac = trac

[pipeline:trac]
pipeline = fanstatic tracs

[filter:fanstatic]
use = egg:fanstatic#fanstatic

[app:tracs]
use = egg:WSGITrac#tracs
path = ${parts.buildout['directory']}/var/tracenvs

[filter:tm]
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[filter:beaker]
use = egg:Beaker#beaker_session

[filter:who]
use = egg:repoze.who#config
config_file = ${parts.buildout['directory']}/etc/who.ini
#log_file = stdout

[server:main]
use = egg:Paste#http
host = ${parts.settings['host']}
port = ${parts.settings['port']}

# Begin logging configuration

[loggers]
keys = root, penelope, sqlalchemy

[handlers]
keys = console, penelope

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_penelope]
level = DEBUG
handlers = penelope
qualname = penelope

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_penelope]
class = FileHandler
args = ('${parts.buildout['directory']}/var/log/penelope_debug.log','a')
level = DEBUG
formatter = generic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s


# End logging configuration
